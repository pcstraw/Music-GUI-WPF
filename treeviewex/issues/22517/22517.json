{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "TreeViewEx",
      "DisplayName": "TreeViewEx"
    },
    "ClosedComment": "",
    "ClosedDate": "2012-11-07T12:01:52.343-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "In addition to SelectedItems, I've found it useful to have a SelectedItem property as well that points to the last selected item. I have 2 different modes that use either multiple selected items or a single item. It's just easier to work with with a SelectedItem property in addition to SelectedItems.",
    "LastUpdatedDate": "2013-05-16T01:29:13.633-07:00",
    "PlannedForRelease": "TreeViewEx 0.9",
    "ReleaseVisibleToPublic": true,
    "Priority": {
      "Name": "Medium",
      "Severity": 100,
      "Id": 2
    },
    "ProjectName": "treeviewex",
    "ReportedDate": "2012-04-17T23:14:17.71-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "SelectedItem Property",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 1,
    "Id": 22517
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Do you think, the user should just select one item or the programmer can select only the first selected item more easily? ",
      "PostedDate": "2012-04-19T02:06:28.957-07:00",
      "Id": -2147483648
    },
    {
      "Message": "For me, it's so the programmer can select the first item more easily. But it's also useful if you need to programmatically select a single item.",
      "PostedDate": "2012-04-19T21:37:50.337-07:00",
      "Id": -2147483648
    },
    {
      "Message": "I think this would blow up TreeViewEx class unnecessarily. You could simply use the linq extension:\r\nSelectedObjects.FirstOrDefault()\r\n\r\n",
      "PostedDate": "2012-04-20T09:58:31.277-07:00",
      "Id": -2147483648
    },
    {
      "Message": "How easy is it to bind against .FirstOrDefault()? I've never bound against that. Besides what's returned -- the first item that was selected or the last one?",
      "PostedDate": "2012-04-21T20:54:48.37-07:00",
      "Id": -2147483648
    },
    {
      "Message": "You did not write you want to bind... ;) But anyway I'm not sure what use case you want to achieve. Is it something anyone else could use?\r\n\r\nDid you think of deriving from TreeViewEx and subscribe to SelectedObjects? In the eventhandler you could set a property like you want.",
      "PostedDate": "2012-04-25T09:24:50.253-07:00",
      "Id": -2147483648
    },
    {
      "Message": "I think it would be useful (I know b/c I could use it). It could also be useful in conjunction with a property that sets a SelectionMode (Single or Multiple). It's difficult to bind to SelectedItems b/c you have to bind with an object that understands collections. Perhaps I want to bind against a label elsewhere that shows some currently selected treeview item text. Try binding a textbox to .SelectedItems -- not simple. I'm still relatively new to WPF, so if there's an easy way to bind to a collection from an element that doesn't intrinsically know about collections, please let me know. :D",
      "PostedDate": "2012-04-26T00:53:46.767-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2012-05-14T07:26:12.183-07:00",
      "Id": -2147483648
    },
    {
      "Message": "There already is a LastSelectedItem property, for some time. ",
      "PostedDate": "2012-11-07T11:58:42.053-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2012-11-07T12:01:52.343-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-14T12:22:37.043-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T01:29:13.633-07:00",
      "Id": -2147483648
    }
  ]
}