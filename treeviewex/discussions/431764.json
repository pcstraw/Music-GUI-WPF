[
  {
    "Id": "995621",
    "ThreadId": "431764",
    "Html": "Hi\r<br />\n<br />\nIn all your samples you add all nodes before you set DataContext.\r<br />\nAfter some testing it seems it does not work to add nodes after the application has started.\r<br />\nI have testet this both by editing an existing sample by adding a button with the code:\r<br />\n<br />\nprivate void ButtonBase_OnClick(object sender, RoutedEventArgs e)<br />\n<pre><code>    {\n        Node node = (Node) DataContext;\n        node.Children.Add(new Node() { Name = &quot;Testing,..&quot;});\n    }\n</code></pre>\n\nand by creating a new project with my own code. Is there some &quot;Refresh&quot; method i can call?<br />\n",
    "PostedDate": "2013-02-02T11:11:29.673-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "997966",
    "ThreadId": "431764",
    "Html": "I noticed the same problem.<br />\nIn the &quot;complex sample&quot;, I replaced the <strong>List&lt;NodeBase&gt;</strong> occurrences by <strong>ObservableCollection&lt;NodeBase&gt;</strong> .<br />\nStill, dynamically adding nodes after the creation of the tree does not produce any result in the view.<br />\n<br />\nHowever, if I replace the <strong>TreeViewEx</strong> by the standard WPF <strong>TreeView</strong> , suddenly it works.<br />\n<br />\nQuestion to the author: is this the normal behavior (i.e. TreeViewEx does not support view notification of changes in the ViewModel/DataContext) or are we doing something wrong?<br />\n",
    "PostedDate": "2013-02-07T07:59:22.207-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "998555",
    "ThreadId": "431764",
    "Html": "Hi and sorry for the late answer. I was quite busy.\r<br />\n<br />\nI've tried this use case in the last release (1.1) and it worked seamlessly. Which Release/Build you are using?\r<br />\n<br />\nTo test ist, I've added a button to the simple sample and called this code in the click eventhandler: <br />\n<pre><code>first1.Children.Add(new Node { Name = &quot;newElement&quot; });</code></pre>\n\n",
    "PostedDate": "2013-02-08T06:40:58.437-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "998635",
    "ThreadId": "431764",
    "Html": "Hi slompf,<br />\nthank you for your reply.<br />\n<br />\nI downloaded the source 3 days ago and compiled the solution in the &quot;Main&quot; folder.<br />\n<br />\nRight now, I checked it again.<br />\nIn the simple sample in MainWindow.xaml I added this XAML code:<br />\n<pre><code>&lt;Button DockPanel.Dock=&quot;Top&quot; Click=&quot;Button_Click&quot; Content=&quot;Add Node&quot; /&gt;</code></pre>\n\nand in MainWindow.xaml.cs this code:<br />\n<pre><code>private void Button_Click(object sender, System.Windows.RoutedEventArgs e)\n        {\n            (DataContext as Node).Children.Add(new Node() { Name = &quot;sdasd&quot; });\n        }</code></pre>\n\nand I don't see any reaction if I click the button.<br />\n<br />\n<br />\n<br />\n<br />\nAnd on a related note - I saw that you removed the &quot;Selection Weirdness&quot; item in the issue tracker.<br />\nDoes that mean that the selection rectangle now scrolls the content if it extends outside the boundaries of the tree view? -- because that doesn't happen either in my case... so maybe I am indeed using the wrong build?<br />\n",
    "PostedDate": "2013-02-08T09:03:54.46-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "998684",
    "ThreadId": "431764",
    "Html": "Everyone is right :P<br />\n<br />\nAfter some testing it seems it's possible to add child nodes after InitializeComponent(), but not root nodes.<br />\n<br />\nfirstNode.Children.Add(new Node { Name = &quot;newElement&quot; });<br />\nDoes not work because it will add root nodes, <br />\n<br />\nfirst1.Children.Add(new Node { Name = &quot;newElement&quot; });<br />\nor<br />\n(DataContext as Node).Children[0].Children.Add(new Node() { Name = &quot;sdasd&quot; });<br />\nworks! because it will add child nodes.<br />\n<br />\nI would still want the functionality to add root nodes, so ill wait for a fix.<br />\n",
    "PostedDate": "2013-02-08T10:33:00.533-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "999462",
    "ThreadId": "431764",
    "Html": "Nice find :)<br />\nslompf, would it be difficult/time-consuming to fix this?<br />\n<br />\nSomething minor that I also noticed is that if you add a child node to a node that previously didn't have any children, it doesn't receive a triangle to indicate that is has children which looks a bit strange, but this is just a display issue as it seems.<br />\n",
    "PostedDate": "2013-02-11T00:36:12.8-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1003000",
    "ThreadId": "431764",
    "Html": "I dont think so. I will have a look at it at the weekend. Thanks for testing this stuff!<br />\n",
    "PostedDate": "2013-02-18T12:25:30.3-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1003854",
    "ThreadId": "431764",
    "Html": "Cool, thx :)<br />\n",
    "PostedDate": "2013-02-20T00:38:39.02-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1005252",
    "ThreadId": "431764",
    "Html": "Should work with the last changeset (71241)<br />\n",
    "PostedDate": "2013-02-22T06:59:16.75-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1006173",
    "ThreadId": "431764",
    "Html": "Thanks a lot for your efforts.\r<br />\nI'll test it this week.<br />\n",
    "PostedDate": "2013-02-25T01:28:47.97-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1010430",
    "ThreadId": "431764",
    "Html": "Hi slompf,<br />\n<br />\nadding new nodes at the root level works now, but I still noticed some strange behavior:<br />\n<br />\n<strong>1.</strong> Adding a child node to a node that didn't have children before<br />\ndoes not add a triangle left to the node, as it should.<br />\nIn the simple sample I added this event handler to the button at the top:<br />\n<pre><code>private void Button_Click(object sender, System.Windows.RoutedEventArgs e)\n        {\n            (DataContext as Node).Children[0].Children[0].Children.Add(new Node() { Name = &quot;asdasdas&quot; });\n        }</code></pre>\n\nOn clicking the button, element11 receives a child, but doesn't receive a triangle left to it.<br />\n<br />\nThe opposite case doesn't work properly, either. If I change the event handler to the following:<br />\n<pre><code>private void Button_Click(object sender, System.Windows.RoutedEventArgs e)\n        {\n            (DataContext as Node).Children[0].Children[2].Children.RemoveAt(0);\n        }</code></pre>\n\nand click the button twice, element13 doesn't have any children left, but still has a triangle which is weird because there is nothing to expand.<br />\n<br />\n<strong>2.</strong> In the simple sample, directly after running the app, do the following:<br />\nExpand the node element14.<br />\nAfter that, click on element14_7.<br />\nOn my system, element14_7 is not properly selected now (border is set but the background is white). This also happens occasionally with other nodes.<br />\nWhat's going on there?<br />\n",
    "PostedDate": "2013-03-05T01:29:17.517-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1015385",
    "ThreadId": "431764",
    "Html": "I've added the issues to the bug tracker and will have a look on them.<br />\n",
    "PostedDate": "2013-03-14T09:26:55.63-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1021614",
    "ThreadId": "431764",
    "Html": "Seems you have fixed them?\r<br />\nI will test it in the next couple of days, thanks for your support.<br />\n",
    "PostedDate": "2013-03-27T01:27:24.097-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]