[
  {
    "Id": "1052595",
    "ThreadId": "445945",
    "Html": "Would it be possible to Replace the StackPanel in TreeViewItems Default Style with a DockPanel, so that it is possible that a DataTemplate can use the full width of the TreeView. Without this, the Binding from the HorizontalAlignment of the ContentPresenter is useless because the Stackpanel always minimizes the items size.\r<br />\n<br />\nAnd you can Replace the Dockpanel wich is a subelemnt of the dockpanel with FrameworkElement, this uses less resources:\r<br />\n<br />\nThen it looks like this:\r<br />\n<br />\n&lt;DockPanel x:Name=&quot;ct&quot; &gt;<br />\n<pre><code>                        &lt;FrameworkElement DockPanel.Dock=&quot;Left&quot; Width=&quot;{TemplateBinding Offset}&quot;/&gt;\n                        &lt;ToggleButton DockPanel.Dock=&quot;Left&quot;\n                                IsChecked=&quot;{Binding RelativeSource={RelativeSource AncestorType={x:Type Controls:TreeViewExItem}},Path=IsExpanded,FallbackValue=False}&quot;\n                                Visibility=&quot;{Binding RelativeSource={RelativeSource AncestorType={x:Type Controls:TreeViewExItem}},Path=IsExpandable, Converter={StaticResource boolToVisiblityConverterHidden},FallbackValue=Hidden}&quot;\n                                ClickMode=&quot;Press&quot; Name=&quot;Expander&quot; HorizontalAlignment=&quot;Right&quot;&gt;\n                            &lt;ToggleButton.Style&gt;\n                                &lt;Style TargetType=&quot;{x:Type ToggleButton}&quot;&gt;\n                                    &lt;Style.Resources&gt;\n                                        &lt;ResourceDictionary /&gt;\n                                    &lt;/Style.Resources&gt;\n                                    &lt;Setter Property=&quot;UIElement.Focusable&quot; Value=&quot;False&quot; /&gt;\n                                    &lt;Setter Property=&quot;FrameworkElement.Width&quot; Value=&quot;16&quot; /&gt;\n                                    &lt;Setter Property=&quot;FrameworkElement.Height&quot; Value=&quot;16&quot; /&gt;\n                                    &lt;Setter Property=&quot;Control.Template&quot;&gt;\n                                        &lt;Setter.Value&gt;\n                                            &lt;ControlTemplate TargetType=&quot;{x:Type ToggleButton}&quot;&gt;\n                                                &lt;Border Padding=&quot;5&quot; Background=&quot;#00FFFFFF&quot; Width=&quot;16&quot; Height=&quot;16&quot;&gt;\n                                                    &lt;Path Fill=&quot;#00FFFFFF&quot; Stroke=&quot;#FF989898&quot; Name=&quot;ExpandPath&quot;&gt;\n                                                        &lt;Path.Data&gt;\n                                                            &lt;PathGeometry Figures=&quot;M0,0L0,6L6,0z&quot; /&gt;\n                                                        &lt;/Path.Data&gt;\n                                                        &lt;Path.RenderTransform&gt;\n                                                            &lt;RotateTransform Angle=&quot;135&quot; CenterX=&quot;3&quot; CenterY=&quot;3&quot; /&gt;\n                                                        &lt;/Path.RenderTransform&gt;\n                                                    &lt;/Path&gt;\n                                                &lt;/Border&gt;\n                                                &lt;ControlTemplate.Triggers&gt;\n                                                    &lt;Trigger Property=&quot;UIElement.IsMouseOver&quot; Value=&quot;True&quot;&gt;\n                                                        &lt;Setter Property=&quot;Shape.Stroke&quot; TargetName=&quot;ExpandPath&quot;&gt;\n                                                            &lt;Setter.Value&gt;\n                                                                &lt;SolidColorBrush&gt;\n                                                                    #FF1BBBFA&lt;/SolidColorBrush&gt;\n                                                            &lt;/Setter.Value&gt;\n                                                        &lt;/Setter&gt;\n                                                        &lt;Setter Property=&quot;Shape.Fill&quot; TargetName=&quot;ExpandPath&quot;&gt;\n                                                            &lt;Setter.Value&gt;\n                                                                &lt;SolidColorBrush&gt;#00FFFFFF&lt;/SolidColorBrush&gt;\n                                                            &lt;/Setter.Value&gt;\n                                                        &lt;/Setter&gt;\n                                                    &lt;/Trigger&gt;\n                                                    &lt;Trigger Property=&quot;ToggleButton.IsChecked&quot; Value=&quot;True&quot;&gt;\n                                                        &lt;Setter Property=&quot;UIElement.RenderTransform&quot;\n                                                                TargetName=&quot;ExpandPath&quot;&gt;\n                                                            &lt;Setter.Value&gt;\n                                                                &lt;RotateTransform Angle=&quot;180&quot; CenterX=&quot;3&quot; CenterY=&quot;3&quot; /&gt;\n                                                            &lt;/Setter.Value&gt;\n                                                        &lt;/Setter&gt;\n                                                        &lt;Setter Property=&quot;Shape.Fill&quot; TargetName=&quot;ExpandPath&quot;&gt;\n                                                            &lt;Setter.Value&gt;\n                                                                &lt;SolidColorBrush&gt;#FF595959&lt;/SolidColorBrush&gt;\n                                                            &lt;/Setter.Value&gt;\n                                                        &lt;/Setter&gt;\n                                                        &lt;Setter Property=&quot;Shape.Stroke&quot; TargetName=&quot;ExpandPath&quot;&gt;\n                                                            &lt;Setter.Value&gt;\n                                                                &lt;SolidColorBrush&gt;#FF262626&lt;/SolidColorBrush&gt;\n                                                            &lt;/Setter.Value&gt;\n                                                        &lt;/Setter&gt;\n                                                    &lt;/Trigger&gt;\n                                                &lt;/ControlTemplate.Triggers&gt;\n                                            &lt;/ControlTemplate&gt;\n                                        &lt;/Setter.Value&gt;\n                                    &lt;/Setter&gt;\n                                &lt;/Style&gt;\n                            &lt;/ToggleButton.Style&gt;\n                        &lt;/ToggleButton&gt;\n                        &lt;ContentPresenter x:Name=&quot;content&quot;\n                            FocusManager.IsFocusScope=&quot;True&quot; \n                            Content=&quot;{TemplateBinding Control.DataContext}&quot;\n                            ContentTemplate=&quot;{Binding DataTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}&quot;\n                            ContentSource=&quot;Header&quot; \n                            HorizontalAlignment=&quot;{TemplateBinding Control.HorizontalContentAlignment}&quot;\n                            VerticalAlignment=&quot;{TemplateBinding Control.VerticalContentAlignment}&quot;\n                            SnapsToDevicePixels=&quot;{TemplateBinding UIElement.SnapsToDevicePixels}&quot; /&gt;\n                    &lt;/DockPanel&gt;\n</code></pre>\n\n",
    "PostedDate": "2013-06-04T05:27:23.447-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1052596",
    "ThreadId": "445945",
    "Html": "If you do this, your Examples still look the same, so it should not break anything!<br />\n",
    "PostedDate": "2013-06-04T05:28:48.933-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1053132",
    "ThreadId": "445945",
    "Html": "Indeed, it seems to work quite well. I've checked it in with 72268.<br />\n",
    "PostedDate": "2013-06-05T07:53:48.257-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]